Instruction Number:

23: Call Graphics Routine

57: Stops looping, proceeds to program counter 163 -> (continuation of graphics routine after loop)

62: Return from Graphics Routine
63: Call to inside graphics routine again but 1 instruction ahead (?)

96: Stops looping again, proceeds to program counter 163 again

101: Return from Graphics Routine, resume at program counter 46

104: Compare with 52, A=5... until it's equal, loop...

2456: Compare with 52, A=33...

4052: Compare with 52, A=52...
4053: Stops looping - move program counter to 52

4060: Dec B, B=8
4061: Loop while B > 0

4102: Dec B, B=1
4103: Stops looping - move program counter to 64

4108: Dec A, A=24
4109: Jumps ahead if A == 0 after decrementing
4110: Continues, program counter 77
4111: Dec C, C=11
4112: Loops back until C == 0 (a.d.)

4158: Dec A, A=14

4161: Dec C, C=2

4166: Dec C, C=1
4167: Continues, because C == 0, moves to program counter 81

4169: Jump back to the loop (where we just were decrementing A and C)...
4170: Load 12 to C, C is now =12
4171: Dec A, A=13
4172: If A == 0, it'll jump to ahead of this loop...

4233: Load 12 to C, C is now =12
4234: Dec A, A=1
4235: Jumps ahead, because A=0. Program counter moves to 85 -> Enter "Scroll logo on screen, and play logo sound"

4245: LD A, (0xFF + offset). Has comment on boot rom: "wait for screen frame" (?)
4246: CP 144, A=0
4253: Loops back if A != 144, and A=0 rn
(Epiphany#1)
    CPU will loop until the memory position in the IO memory space is 144. That memory space needs to be filled by something that appears to be called "screen frame".
    
    - Added Interrupts, Clock simulation and LCD control.

4683: LD A, (0xFF44). A = 3 !! Something is definitely happening...

24200: CP 144 : A is FINALLY 144, 
24201: JUMP IF NOT ZERO: BUT THE ZERO FLAG IS SET - IT DOESN'T JUMP
24202: DEC C. The program counter advances and we finally keep working our way through the boot
24203: JR NZ: Jump if not zero back to the LD A, ($ff44) instruction before the CP.

24207: DEC C: Keep decrementing C until it's Zero. C=6

24232: DEC C: C=1
24233: JR NZ: C was 0, so it doesn't jump because the ZERO Flag is set.
24234: DEC E: E=1
24235: JR NZ: It doesn't Jump!! Move program counter to 112

24240: CP 98: A=1, Zero flag is not set.
24241: JR Z: it doesn't jump. move program counter to 122

24243: CP 100: A=1. Zero flag is not set.
24244: JR NZ: Jumps ahead from program counter 126 to 134

24246: SUB B:
(Error) Error for the first time in so long... the operation isn't defined! Means we got over the LY ($ff44) problem!!

